<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.siriuscloud.xiaoy.dao.NoteMapper">
  <resultMap id="BaseResultMap" type="cc.siriuscloud.xiaoy.domain.Note">
    <id column="note_id" jdbcType="INTEGER" property="noteId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="imgs" jdbcType="CHAR" property="imgs" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cc.siriuscloud.xiaoy.domain.Note">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    note_id, start_time, like_count, imgs, user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xy_note
    where note_id = #{noteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xy_note
    where note_id = #{noteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cc.siriuscloud.xiaoy.domain.Note">
    insert into xy_note (note_id, start_time, like_count, 
      imgs, user_id, content
      )
    values (#{noteId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{likeCount,jdbcType=INTEGER}, 
      #{imgs,jdbcType=CHAR}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.siriuscloud.xiaoy.domain.Note">
    insert into xy_note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        note_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="imgs != null">
        imgs,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        #{noteId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="imgs != null">
        #{imgs,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.siriuscloud.xiaoy.domain.Note">
    update xy_note
    <set>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="imgs != null">
        imgs = #{imgs,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cc.siriuscloud.xiaoy.domain.Note">
    update xy_note
    set start_time = #{startTime,jdbcType=TIMESTAMP},
      like_count = #{likeCount,jdbcType=INTEGER},
      imgs = #{imgs,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.siriuscloud.xiaoy.domain.Note">
    update xy_note
    set start_time = #{startTime,jdbcType=TIMESTAMP},
      like_count = #{likeCount,jdbcType=INTEGER},
      imgs = #{imgs,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
</mapper>